(*# RefinementTypes #*)

global protocol PasswordManager(role C, role S) {
    rec X [stored_pass<S>: string = "pass"] {
        Login(entered_pass: string) from C to S;
        choice at S {
            WrongPass(wrong: unit{entered_pass <> stored_pass}) from S to C;
            continue X [stored_pass];
        } or {
            Authenticated(correct: unit{entered_pass = stored_pass}) from S to C;
            NewPass(new_pass: string{len(new_pass) >= 6}) from C to S;
            continue X [new_pass];
        }
    }
}
